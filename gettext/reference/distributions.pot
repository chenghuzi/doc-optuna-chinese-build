# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Optuna Contributors.
# This file is distributed under the same license as the Optuna package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Optuna 1.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-17 19:47-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/distributions.rst:4
msgid "Distributions"
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.UniformDistribution:1
msgid "A uniform distribution in the linear domain."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.UniformDistribution:3
msgid "This object is instantiated by :func:`~optuna.trial.Trial.suggest_uniform`, and passed to :mod:`~optuna.samplers` in general."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.UniformDistribution:8
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.LogUniformDistribution:8
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution:13
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution:14
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution:14
msgid "Lower endpoint of the range of the distribution. ``low`` is included in the range."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.UniformDistribution:12
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.LogUniformDistribution:12
msgid "Upper endpoint of the range of the distribution. ``high`` is excluded from the range."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.UniformDistribution.single:1
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.LogUniformDistribution.single:1
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution.single:1
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution.single:1
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution.single:1
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution.single:1
msgid "Test whether the range of this distribution contains just a single value."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.UniformDistribution.single:3
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.LogUniformDistribution.single:3
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution.single:3
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution.single:3
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution.single:3
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution.single:3
msgid "When this method returns :obj:`True`, :mod:`~optuna.samplers` always sample the same value from the distribution."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.UniformDistribution.single:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.LogUniformDistribution.single:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution.single:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution.single:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution.single:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution.single:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.distribution_to_json:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.json_to_distribution:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.check_distribution_compatibility:0
msgid "Returns"
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.UniformDistribution.single:6
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.LogUniformDistribution.single:6
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution.single:6
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution.single:6
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution.single:6
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution.single:6
msgid ":obj:`True` if the range of this distribution contains just a single value, otherwise :obj:`False`."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.LogUniformDistribution:1
msgid "A uniform distribution in the log domain."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.LogUniformDistribution:3
msgid "This object is instantiated by :func:`~optuna.trial.Trial.suggest_loguniform`, and passed to :mod:`~optuna.samplers` in general."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution:1
msgid "A discretized uniform distribution in the linear domain."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution:3
msgid "This object is instantiated by :func:`~optuna.trial.Trial.suggest_discrete_uniform`, and passed to :mod:`~optuna.samplers` in general."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution:7
msgid "If the range :math:`[\\mathsf{low}, \\mathsf{high}]` is not divisible by :math:`q`, :math:`\\mathsf{high}` will be replaced with the maximum of :math:`k q + \\mathsf{low} \\lt \\mathsf{high}`, where :math:`k` is an integer."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution:17
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution:18
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution:18
msgid "Upper endpoint of the range of the distribution. ``high`` is included in the range."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.DiscreteUniformDistribution:21
msgid "A discretization step."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution:1
msgid "A uniform distribution on integers."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution:3
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution:3
msgid "This object is instantiated by :func:`~optuna.trial.Trial.suggest_int`, and passed to :mod:`~optuna.samplers` in general."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution:7
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution:7
msgid "If the range :math:`[\\mathsf{low}, \\mathsf{high}]` is not divisible by :math:`\\mathsf{step}`, :math:`\\mathsf{high}` will be replaced with the maximum of :math:`k \\times \\mathsf{step} + \\mathsf{low} \\lt \\mathsf{high}`, where :math:`k` is an integer."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntUniformDistribution:22
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution:22
msgid "A step for spacing between values."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.IntLogUniformDistribution:1
msgid "A uniform distribution on integers in the log domain."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution:1
msgid "A categorical distribution."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution:3
msgid "This object is instantiated by :func:`~optuna.trial.Trial.suggest_categorical`, and passed to :mod:`~optuna.samplers` in general."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.distribution_to_json:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.json_to_distribution:0
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.check_distribution_compatibility:0
msgid "Parameters"
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution:6
#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution:16
msgid "Parameter value candidates."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.CategoricalDistribution:10
msgid "Not all types are guaranteed to be compatible with all storages. It is recommended to restrict the types of the choices to :obj:`None`, :class:`bool`, :class:`int`, :class:`float` and :class:`str`."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.distribution_to_json:1
msgid "Serialize a distribution to JSON format."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.distribution_to_json:3
msgid "A distribution to be serialized."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.distribution_to_json:5
msgid "A JSON string of a given distribution."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.json_to_distribution:1
msgid "Deserialize a distribution in JSON format."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.json_to_distribution:3
msgid "A JSON-serialized distribution."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.json_to_distribution:5
msgid "A deserialized distribution."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.check_distribution_compatibility:1
msgid "A function to check compatibility of two distributions."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.check_distribution_compatibility:3
msgid "Note that this method is not supposed to be called by library users."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.check_distribution_compatibility:5
msgid "A distribution previously recorded in storage."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.check_distribution_compatibility:6
msgid "A distribution newly added to storage."
msgstr ""

#: ../../../optuna/optuna/distributions.py:docstring of optuna.distributions.check_distribution_compatibility:8
msgid "True denotes given distributions are compatible. Otherwise, they are not."
msgstr ""
