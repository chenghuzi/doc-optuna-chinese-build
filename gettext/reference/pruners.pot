# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Optuna Contributors.
# This file is distributed under the same license as the Optuna package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Optuna 1.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-17 19:47-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/pruners.rst:4
msgid "Pruners"
msgstr ""

#: ../../../optuna/optuna/pruners/_base.py:docstring of optuna.pruners.BasePruner:1
msgid "Base class for pruners."
msgstr ""

#: ../../../optuna/optuna/pruners/_base.py:docstring of optuna.pruners.BasePruner.prune:1
msgid "Judge whether the trial should be pruned based on the reported values."
msgstr ""

#: ../../../optuna/optuna/pruners/_base.py:docstring of optuna.pruners.BasePruner.prune:3
msgid "Note that this method is not supposed to be called by library users. Instead, :func:`optuna.trial.Trial.report` and :func:`optuna.trial.Trial.should_prune` provide user interfaces to implement pruning mechanism in an objective function."
msgstr ""

#: ../../../optuna/optuna/pruners/_base.py:docstring of optuna.pruners.BasePruner.prune:0
#: ../../../optuna/optuna/pruners/_median.py:docstring of optuna.pruners.MedianPruner:0
#: ../../../optuna/optuna/pruners/_percentile.py:docstring of optuna.pruners.PercentilePruner:0
#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:0
#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:0
msgid "Parameters"
msgstr ""

#: ../../../optuna/optuna/pruners/_base.py:docstring of optuna.pruners.BasePruner.prune:7
msgid "Study object of the target study."
msgstr ""

#: ../../../optuna/optuna/pruners/_base.py:docstring of optuna.pruners.BasePruner.prune:8
msgid "FrozenTrial object of the target trial. Take a copy before modifying this object."
msgstr ""

#: ../../../optuna/optuna/pruners/_base.py:docstring of optuna.pruners.BasePruner.prune:0
msgid "Returns"
msgstr ""

#: ../../../optuna/optuna/pruners/_base.py:docstring of optuna.pruners.BasePruner.prune:11
msgid "A boolean value representing whether the trial should be pruned."
msgstr ""

#: ../../../optuna/optuna/pruners/_median.py:docstring of optuna.pruners.MedianPruner:1
msgid "Pruner using the median stopping rule."
msgstr ""

#: ../../../optuna/optuna/pruners/_median.py:docstring of optuna.pruners.MedianPruner:3
msgid "Prune if the trial's best intermediate result is worse than median of intermediate results of previous trials at the same step."
msgstr ""

#: ../../../optuna/optuna/pruners/_median.py:docstring of optuna.pruners.MedianPruner:7
#: ../../../optuna/optuna/pruners/_nop.py:docstring of optuna.pruners.NopPruner:4
#: ../../../optuna/optuna/pruners/_percentile.py:docstring of optuna.pruners.PercentilePruner:6
#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:16
#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:45
#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:7
msgid "Example"
msgstr ""

#: ../../../optuna/optuna/pruners/_median.py:docstring of optuna.pruners.MedianPruner:8
msgid "We minimize an objective function with the median stopping rule."
msgstr ""

#: ../../../optuna/optuna/pruners/_median.py:docstring of optuna.pruners.MedianPruner:45
#: ../../../optuna/optuna/pruners/_percentile.py:docstring of optuna.pruners.PercentilePruner:44
msgid "Pruning is disabled until the given number of trials finish in the same study."
msgstr ""

#: ../../../optuna/optuna/pruners/_median.py:docstring of optuna.pruners.MedianPruner:46
#: ../../../optuna/optuna/pruners/_percentile.py:docstring of optuna.pruners.PercentilePruner:45
#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:50
msgid "Pruning is disabled until the trial exceeds the given number of step."
msgstr ""

#: ../../../optuna/optuna/pruners/_median.py:docstring of optuna.pruners.MedianPruner:47
msgid "Interval in number of steps between the pruning checks, offset by the warmup steps. If no value has been reported at the time of a pruning check, that particular check will be postponed until a value is reported."
msgstr ""

#: ../../../optuna/optuna/pruners/_nop.py:docstring of optuna.pruners.NopPruner:1
msgid "Pruner which never prunes trials."
msgstr ""

#: ../../../optuna/optuna/pruners/_percentile.py:docstring of optuna.pruners.PercentilePruner:1
msgid "Pruner to keep the specified percentile of the trials."
msgstr ""

#: ../../../optuna/optuna/pruners/_percentile.py:docstring of optuna.pruners.PercentilePruner:3
msgid "Prune if the best intermediate value is in the bottom percentile among trials at the same step."
msgstr ""

#: ../../../optuna/optuna/pruners/_percentile.py:docstring of optuna.pruners.PercentilePruner:42
msgid "Percentile which must be between 0 and 100 inclusive (e.g., When given 25.0, top of 25th percentile trials are kept)."
msgstr ""

#: ../../../optuna/optuna/pruners/_percentile.py:docstring of optuna.pruners.PercentilePruner:46
#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:52
msgid "Interval in number of steps between the pruning checks, offset by the warmup steps. If no value has been reported at the time of a pruning check, that particular check will be postponed until a value is reported. Value must be at least 1."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:1
msgid "Pruner using Asynchronous Successive Halving Algorithm."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:3
msgid "`Successive Halving <https://arxiv.org/abs/1502.07943>`_ is a bandit-based algorithm to identify the best one among multiple configurations. This class implements an asynchronous version of Successive Halving. Please refer to the paper of `Asynchronous Successive Halving <http://arxiv.org/abs/1810.05934>`_ for detailed descriptions."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:8
msgid "Note that, this class does not take care of the parameter for the maximum resource, referred to as :math:`R` in the paper. The maximum resource allocated to a trial is typically limited inside the objective function (e.g., ``step`` number in `simple.py <https://github.com/optuna/optuna/tree/c5777b3e/examples/pruning/simple.py#L31>`_, ``EPOCH`` number in `chainer_integration.py <https://github.com/optuna/optuna/tree/c5777b3e/examples/pruning/chainer_integration.py#L65>`_)."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:17
msgid "We minimize an objective function with ``SuccessiveHalvingPruner``."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:52
msgid "A parameter for specifying the minimum resource allocated to a trial (in the `paper <http://arxiv.org/abs/1810.05934>`_ this parameter is referred to as :math:`r`). This parameter defaults to 'auto' where the value is determined based on a heuristic that looks at the number of required steps for the first trial to complete.  A trial is never pruned until it executes :math:`\\mathsf{min}\\_\\mathsf{resource} \\times \\mathsf{reduction}\\_\\mathsf{factor}^{ \\mathsf{min}\\_\\mathsf{early}\\_\\mathsf{stopping}\\_\\mathsf{rate}}` steps (i.e., the completion point of the first rung). When the trial completes the first rung, it will be promoted to the next rung only if the value of the trial is placed in the top :math:`{1 \\over \\mathsf{reduction}\\_\\mathsf{factor}}` fraction of the all trials that already have reached the point (otherwise it will be pruned there). If the trial won the competition, it runs until the next completion point (i.e., :math:`\\mathsf{min}\\_\\mathsf{resource} \\times \\mathsf{reduction}\\_\\mathsf{factor}^{ (\\mathsf{min}\\_\\mathsf{early}\\_\\mathsf{stopping}\\_\\mathsf{rate} + \\mathsf{rung})}` steps) and repeats the same procedure.  .. note::     If the step of the last intermediate value may change with each trial, please     manually specify the minimum possible step to ``min_resource``."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:52
msgid "A parameter for specifying the minimum resource allocated to a trial (in the `paper <http://arxiv.org/abs/1810.05934>`_ this parameter is referred to as :math:`r`). This parameter defaults to 'auto' where the value is determined based on a heuristic that looks at the number of required steps for the first trial to complete."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:58
msgid "A trial is never pruned until it executes :math:`\\mathsf{min}\\_\\mathsf{resource} \\times \\mathsf{reduction}\\_\\mathsf{factor}^{ \\mathsf{min}\\_\\mathsf{early}\\_\\mathsf{stopping}\\_\\mathsf{rate}}` steps (i.e., the completion point of the first rung). When the trial completes the first rung, it will be promoted to the next rung only if the value of the trial is placed in the top :math:`{1 \\over \\mathsf{reduction}\\_\\mathsf{factor}}` fraction of the all trials that already have reached the point (otherwise it will be pruned there). If the trial won the competition, it runs until the next completion point (i.e., :math:`\\mathsf{min}\\_\\mathsf{resource} \\times \\mathsf{reduction}\\_\\mathsf{factor}^{ (\\mathsf{min}\\_\\mathsf{early}\\_\\mathsf{stopping}\\_\\mathsf{rate} + \\mathsf{rung})}` steps) and repeats the same procedure."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:75
msgid "If the step of the last intermediate value may change with each trial, please manually specify the minimum possible step to ``min_resource``."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:77
#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:77
msgid "A parameter for specifying reduction factor of promotable trials (in the `paper <http://arxiv.org/abs/1810.05934>`_ this parameter is referred to as :math:`\\eta`).  At the completion point of each rung, about :math:`{1 \\over \\mathsf{reduction}\\_\\mathsf{factor}}` trials will be promoted."
msgstr ""

#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:82
#: ../../../optuna/optuna/pruners/_successive_halving.py:docstring of optuna.pruners.SuccessiveHalvingPruner:82
msgid "A parameter for specifying the minimum early-stopping rate (in the `paper <http://arxiv.org/abs/1810.05934>`_ this parameter is referred to as :math:`s`)."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:1
msgid "Pruner using Hyperband."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:3
msgid "As SuccessiveHalving (SHA) requires the number of configurations :math:`n` as its hyperparameter.  For a given finite budget :math:`B`, all the configurations have the resources of :math:`B \\over n` on average. As you can see, there will be a trade-off of :math:`B` and :math:`B \\over n`. `Hyperband <http://www.jmlr.org/papers/volume18/16-558/16-558.pdf>`_ attacks this trade-off by trying different :math:`n` values for a fixed budget."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:11
msgid "In the Hyperband paper, the counterpart of :class:`~optuna.samplers.RandomSampler` is used."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:13
msgid "Optuna uses :class:`~optuna.samplers.TPESampler` by default."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:14
msgid "`The benchmark result <https://github.com/optuna/optuna/pull/828#issuecomment-575457360>`_ shows that :class:`optuna.pruners.HyperbandPruner` supports both samplers."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:19
msgid "If you use ``HyperbandPruner`` with :class:`~optuna.samplers.TPESampler`, it's recommended to consider to set larger ``n_trials`` or ``timeout`` to make full use of the characteristics of :class:`~optuna.samplers.TPESampler` because :class:`~optuna.samplers.TPESampler` uses some (by default, :math:`10`) :class:`~optuna.trial.Trial`\\ s for its startup."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:25
msgid "As Hyperband runs multiple :class:`~optuna.pruners.SuccessiveHalvingPruner` and collect trials based on the current :class:`~optuna.trial.Trial`\\ 's bracket ID, each bracket needs to observe more than :math:`10` :class:`~optuna.trial.Trial`\\ s for :class:`~optuna.samplers.TPESampler` to adapt its search space."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:30
msgid "Thus, for example, if ``HyperbandPruner`` has :math:`4` pruners in it, at least :math:`4 \\times 10` trials are consumed for startup."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:34
msgid "Hyperband has several :class:`~optuna.pruners.SuccessiveHalvingPruner`. Each :class:`~optuna.pruners.SuccessiveHalvingPruner` is referred as \"bracket\" in the original paper. The number of brackets is an important factor to control the early stopping behavior of Hyperband and is automatically determined by ``min_resource``, ``max_resource`` and ``reduction_factor`` as `The number of brackets = floor(log_{reduction_factor}(max_resource / min_resource)) + 1`. Please set ``reduction_factor`` so that the number of brackets is not too large　(about 4 ~ 6 in most use cases).　Please see Section 3.6 of the `original paper <http://www.jmlr.org/papers/volume18/16-558/16-558.pdf>`_ for the detail."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:46
msgid "We minimize an objective function with Hyperband pruning algorithm."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:87
msgid "A parameter for specifying the minimum resource allocated to a trial noted as :math:`r` in the paper. A smaller :math:`r` will give a result faster, but a larger :math:`r` will give a better guarantee of successful judging between configurations. See the details for :class:`~optuna.pruners.SuccessiveHalvingPruner`."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:91
msgid "A parameter for specifying the maximum resource allocated to a trial. :math:`R` in the paper corresponds to ``max_resource / min_resource``. This value represents and should match the maximum iteration steps (e.g., the number of epochs for neural networks). When this argument is \"auto\", the maximum resource is estimated according to the completed trials. The default value of this argument is \"auto\".  .. note::     With \"auto\", the maximum resource will be the largest step reported by     :meth:`~optuna.trial.Trial.report` in the first, or one of the first if trained in     parallel, completed trial. No trials will be pruned until the maximum resource is     determined.  .. note::     If the step of the last intermediate value may change with each trial, please     manually specify the maximum possible step to ``max_resource``."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:91
msgid "A parameter for specifying the maximum resource allocated to a trial. :math:`R` in the paper corresponds to ``max_resource / min_resource``. This value represents and should match the maximum iteration steps (e.g., the number of epochs for neural networks). When this argument is \"auto\", the maximum resource is estimated according to the completed trials. The default value of this argument is \"auto\"."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:98
msgid "With \"auto\", the maximum resource will be the largest step reported by :meth:`~optuna.trial.Trial.report` in the first, or one of the first if trained in parallel, completed trial. No trials will be pruned until the maximum resource is determined."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:104
msgid "If the step of the last intermediate value may change with each trial, please manually specify the maximum possible step to ``max_resource``."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:106
msgid "A parameter for specifying reduction factor of promotable trials noted as :math:`\\eta` in the paper. See the details for :class:`~optuna.pruners.SuccessiveHalvingPruner`."
msgstr ""

#: ../../../optuna/optuna/pruners/_hyperband.py:docstring of optuna.pruners.HyperbandPruner:111
msgid "Added in v1.1.0 as an experimental feature. The interface may change in newer versions without prior notice. See https://github.com/optuna/optuna/releases/tag/v1.1.0."
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:1
msgid "Pruner to detect outlying metrics of the trials."
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:3
msgid "Prune if a metric exceeds upper threshold, falls behind lower threshold or reaches ``nan``."
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:53
msgid "Args"
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:44
msgid "lower:"
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:44
msgid "A minimum value which determines whether pruner prunes or not. If an intermediate value is smaller than lower, it prunes."
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:47
msgid "upper:"
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:47
msgid "A maximum value which determines whether pruner prunes or not. If an intermediate value is larger than upper, it prunes."
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:49
msgid "n_warmup_steps:"
msgstr ""

#: ../../../optuna/optuna/pruners/_threshold.py:docstring of optuna.pruners.ThresholdPruner:53
msgid "interval_steps:"
msgstr ""
