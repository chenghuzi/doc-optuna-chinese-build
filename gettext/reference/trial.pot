# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Optuna Contributors.
# This file is distributed under the same license as the Optuna package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Optuna 1.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-17 19:47-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/trial.rst:5
msgid "Trial"
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial:1
msgid "A trial is a process of evaluating an objective function."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial:3
msgid "This object is passed to an objective function and provides interfaces to get parameter suggestion, manage the trial's state, and set/get user-defined attributes of the trial."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial:6
msgid "Note that the direct use of this constructor is not recommended. This object is seamlessly instantiated and passed to the objective function behind the :func:`optuna.study.Study.optimize()` method; hence library users do not care about instantiation of this object."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.set_user_attr:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:0
#: ../../../optuna/optuna/trial/_fixed.py:docstring of optuna.trial.FixedTrial:0
msgid "Parameters"
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial:11
msgid "A :class:`~optuna.study.Study` object."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial:12
msgid "A trial ID that is automatically generated."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.datetime_start:1
msgid "Return start datetime."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.datetime_start:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.distributions:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.number:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.params:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.should_prune:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.user_attrs:0
#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial.duration:0
msgid "Returns"
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.datetime_start:3
#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:18
msgid "Datetime where the :class:`~optuna.trial.Trial` started."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.distributions:1
msgid "Return distributions of parameters to be optimized."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.distributions:3
msgid "A dictionary containing all distributions."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.number:1
msgid "Return trial's number which is consecutive and unique in a study."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.number:3
msgid "A trial number."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.params:1
msgid "Return parameters to be optimized."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.params:3
#: ../../../optuna/optuna/trial/_fixed.py:docstring of optuna.trial.FixedTrial:27
msgid "A dictionary containing all parameters."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:1
msgid "Report an objective function value for a given step."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:3
msgid "The reported values are used by the pruners to determine whether this trial should be pruned."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:7
msgid "Please refer to :class:`~optuna.pruners.BasePruner`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:10
msgid "The reported value is converted to ``float`` type by applying ``float()`` function internally. Thus, it accepts all float-like types (e.g., ``numpy.float32``). If the conversion fails, a ``TypeError`` is raised."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:15
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.set_user_attr:6
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:6
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:13
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:15
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:6
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:8
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:8
#: ../../../optuna/optuna/trial/_fixed.py:docstring of optuna.trial.FixedTrial:10
msgid "Example"
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:16
msgid "Report intermediate scores of `SGDClassifier <https://scikit-learn.org/stable/modules/ generated/sklearn.linear_model.SGDClassifier.html>`_ training."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:45
msgid "A value returned from the objective function."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.report:46
msgid "Step of the trial (e.g., Epoch of neural network training)."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.set_user_attr:1
msgid "Set user attributes to the trial."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.set_user_attr:3
msgid "The user attributes in the trial can be access via :func:`optuna.trial.Trial.user_attrs`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.set_user_attr:7
msgid "Save fixed hyperparameters of neural network training."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.set_user_attr:36
msgid "A key string of the attribute."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.set_user_attr:37
msgid "A value of the attribute. The value should be JSON serializable."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.should_prune:1
msgid "Suggest whether the trial should be pruned or not."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.should_prune:3
msgid "The suggestion is made by a pruning algorithm associated with the trial and is based on previously reported values. The algorithm can be specified when constructing a :class:`~optuna.study.Study`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.should_prune:8
msgid "If no values have been reported, the algorithm cannot make meaningful suggestions. Similarly, if this method is called multiple times with the exact same set of reported values, the suggestions will be the same."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.should_prune:13
msgid "Please refer to the example code in :func:`optuna.trial.Trial.report`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.should_prune:15
msgid "A boolean value. If :obj:`True`, the trial should be pruned according to the configured pruning algorithm. Otherwise, the trial should continue."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:1
msgid "Suggest a value for the categorical parameter."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:3
msgid "The value is sampled from ``choices``."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:7
msgid "Suggest a kernel function of `SVC <https://scikit-learn.org/stable/modules/generated/ sklearn.svm.SVC.html>`_."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:31
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:39
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:46
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:31
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:33
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:34
msgid "A parameter name."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:32
msgid "Parameter value candidates."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:35
msgid ":class:`~optuna.distributions.CategoricalDistribution`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_categorical:37
msgid "A suggested value."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:1
msgid "Suggest a value for the discrete parameter."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:3
msgid "The value is sampled from the range :math:`[\\mathsf{low}, \\mathsf{high}]`, and the step of discretization is :math:`q`. More specifically, this method returns one of the values in the sequence :math:`\\mathsf{low}, \\mathsf{low} + q, \\mathsf{low} + 2 q, \\dots, \\mathsf{low} + k q \\le \\mathsf{high}`, where :math:`k` denotes an integer. Note that :math:`high` may be changed due to round-off errors if :math:`q` is not an integer. Please check warning messages to find the changed values."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:14
msgid "Suggest a fraction of samples used for fitting the individual learners of `GradientBoostingClassifier <https://scikit-learn.org/stable/modules/generated/ sklearn.ensemble.GradientBoostingClassifier.html>`_."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:40
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:47
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:32
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:34
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:35
msgid "Lower endpoint of the range of suggested values. ``low`` is included in the range."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:41
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:33
msgid "Upper endpoint of the range of suggested values. ``high`` is included in the range."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:42
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:50
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:34
msgid "A step of discretization."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_discrete_uniform:44
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:66
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:38
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:39
msgid "A suggested float value."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:1
msgid "Suggest a value for the floating point parameter."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:3
msgid "Note that this is a wrapper method for :func:`~optuna.trial.Trial.suggest_uniform`, :func:`~optuna.trial.Trial.suggest_loguniform` and :func:`~optuna.trial.Trial.suggest_discrete_uniform`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:10
msgid "Please see also :func:`~optuna.trial.Trial.suggest_uniform`, :func:`~optuna.trial.Trial.suggest_loguniform` and :func:`~optuna.trial.Trial.suggest_discrete_uniform`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:16
msgid "Suggest a momentum, learning rate and scaling factor of learning rate for neural network training."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:48
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:35
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:36
msgid "Upper endpoint of the range of suggested values. ``high`` is excluded from the range."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:50
msgid "A step of discretization.  .. note::     The ``step`` and ``log`` arguments cannot be used at the same time. To set     the ``step`` argument to a float number, set the ``log`` argument to ``False``."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:53
msgid "The ``step`` and ``log`` arguments cannot be used at the same time. To set the ``step`` argument to a float number, set the ``log`` argument to ``False``."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:55
msgid "A flag to sample the value from the log domain or not. If ``log`` is true, the value is sampled from the range in the log domain. Otherwise, the value is sampled from the range in the linear domain. See also :func:`suggest_uniform` and :func:`suggest_loguniform`.  .. note::     The ``step`` and ``log`` arguments cannot be used at the same time. To set     the ``log`` argument to ``True``, set the ``step`` argument to ``None``."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:55
msgid "A flag to sample the value from the log domain or not. If ``log`` is true, the value is sampled from the range in the log domain. Otherwise, the value is sampled from the range in the linear domain. See also :func:`suggest_uniform` and :func:`suggest_loguniform`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:61
msgid "The ``step`` and ``log`` arguments cannot be used at the same time. To set the ``log`` argument to ``True``, set the ``step`` argument to ``None``."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:0
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:0
msgid "Raises"
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_float:64
msgid "If ``step is not None`` and ``log = True`` are specified."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:1
msgid "Suggest a value for the integer parameter."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:3
msgid "The value is sampled from the integers in :math:`[\\mathsf{low}, \\mathsf{high}]`."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:7
msgid "Suggest the number of trees in `RandomForestClassifier <https://scikit-learn.org/ stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html>`_."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:34
msgid "A step of discretization.  .. note::     Note that :math:`\\mathsf{high}` is modified if the range is not divisible by     :math:`\\mathsf{step}`. Please check the warning messages to find the changed     values.  .. note::     The method returns one of the values in the sequence     :math:`\\mathsf{low}, \\mathsf{low} + \\mathsf{step}, \\mathsf{low} + 2 *     \\mathsf{step}, \\dots, \\mathsf{low} + k * \\mathsf{step} \\le     \\mathsf{high}`, where :math:`k` denotes an integer.  .. note::     The ``step != 1`` and ``log`` arguments cannot be used at the same time.     To set the ``step`` argument :math:`\\mathsf{step} \\ge 2`, set the     ``log`` argument to ``False``."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:37
msgid "Note that :math:`\\mathsf{high}` is modified if the range is not divisible by :math:`\\mathsf{step}`. Please check the warning messages to find the changed values."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:42
msgid "The method returns one of the values in the sequence :math:`\\mathsf{low}, \\mathsf{low} + \\mathsf{step}, \\mathsf{low} + 2 * \\mathsf{step}, \\dots, \\mathsf{low} + k * \\mathsf{step} \\le \\mathsf{high}`, where :math:`k` denotes an integer."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:48
msgid "The ``step != 1`` and ``log`` arguments cannot be used at the same time. To set the ``step`` argument :math:`\\mathsf{step} \\ge 2`, set the ``log`` argument to ``False``."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:51
msgid "A flag to sample the value from the log domain or not.  .. note::     If ``log`` is true, at first, the range of suggested values is divided into     grid points of width 1. The range of suggested values is then converted to     a log domain, from which a value is sampled. The uniformly sampled     value is re-converted to the original domain and rounded to the nearest grid     point that we just split, and the suggested value is determined.     For example, if `low = 2` and `high = 8`, then the range of suggested values is     `[2, 3, 4, 5, 6, 7, 8]` and lower values tend to be more sampled than higher     values.  .. note::     The ``step != 1`` and ``log`` arguments cannot be used at the same time.     To set the ``log`` argument to ``True``, set the ``step`` argument to 1."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:51
msgid "A flag to sample the value from the log domain or not."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:54
msgid "If ``log`` is true, at first, the range of suggested values is divided into grid points of width 1. The range of suggested values is then converted to a log domain, from which a value is sampled. The uniformly sampled value is re-converted to the original domain and rounded to the nearest grid point that we just split, and the suggested value is determined. For example, if `low = 2` and `high = 8`, then the range of suggested values is `[2, 3, 4, 5, 6, 7, 8]` and lower values tend to be more sampled than higher values."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:64
msgid "The ``step != 1`` and ``log`` arguments cannot be used at the same time. To set the ``log`` argument to ``True``, set the ``step`` argument to 1."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_int:67
msgid "If ``step != 1`` and ``log = True`` are specified."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:1
#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:1
msgid "Suggest a value for the continuous parameter."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:3
msgid "The value is sampled from the range :math:`[\\mathsf{low}, \\mathsf{high})` in the log domain. When :math:`\\mathsf{low} = \\mathsf{high}`, the value of :math:`\\mathsf{low}` will be returned."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_loguniform:9
msgid "Suggest penalty parameter ``C`` of `SVC <https://scikit-learn.org/stable/modules/ generated/sklearn.svm.SVC.html>`_."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:3
msgid "The value is sampled from the range :math:`[\\mathsf{low}, \\mathsf{high})` in the linear domain. When :math:`\\mathsf{low} = \\mathsf{high}`, the value of :math:`\\mathsf{low}` will be returned."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.suggest_uniform:9
msgid "Suggest a momentum for neural network training."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.user_attrs:1
msgid "Return user attributes."
msgstr ""

#: ../../../optuna/optuna/trial/_trial.py:docstring of optuna.trial.Trial.user_attrs:3
msgid "A dictionary containing all user attributes."
msgstr ""

#: ../../../optuna/optuna/trial/_fixed.py:docstring of optuna.trial.FixedTrial:1
msgid "A trial class which suggests a fixed value for each parameter."
msgstr ""

#: ../../../optuna/optuna/trial/_fixed.py:docstring of optuna.trial.FixedTrial:3
msgid "This object has the same methods as :class:`~optuna.trial.Trial`, and it suggests pre-defined parameter values. The parameter values can be determined at the construction of the :class:`~optuna.trial.FixedTrial` object. In contrast to :class:`~optuna.trial.Trial`, :class:`~optuna.trial.FixedTrial` does not depend on :class:`~optuna.study.Study`, and it is useful for deploying optimization results."
msgstr ""

#: ../../../optuna/optuna/trial/_fixed.py:docstring of optuna.trial.FixedTrial:11
msgid "Evaluate an objective function with parameter values given by a user."
msgstr ""

#: ../../../optuna/optuna/trial/_fixed.py:docstring of optuna.trial.FixedTrial:25
msgid "Please refer to :class:`~optuna.trial.Trial` for details of methods and properties."
msgstr ""

#: ../../../optuna/optuna/trial/_fixed.py:docstring of optuna.trial.FixedTrial:28
msgid "A trial number. Defaults to ``0``."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:1
msgid "Status and results of a :class:`~optuna.trial.Trial`."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:5
msgid "Unique and consecutive number of :class:`~optuna.trial.Trial` for each :class:`~optuna.study.Study`. Note that this field uses zero-based numbering."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:10
msgid ":class:`TrialState` of the :class:`~optuna.trial.Trial`."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:14
msgid "Objective value of the :class:`~optuna.trial.Trial`."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:22
msgid "Datetime where the :class:`~optuna.trial.Trial` finished."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:26
msgid "Dictionary that contains suggested parameters."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:30
msgid "Dictionary that contains the attributes of the :class:`~optuna.trial.Trial` set with :func:`optuna.trial.Trial.set_user_attr`."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial:35
msgid "Intermediate objective values set with :func:`optuna.trial.Trial.report`."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial.distributions:1
msgid "Dictionary that contains the distributions of :attr:`params`."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial.duration:1
msgid "Return the elapsed time taken to complete the trial."
msgstr ""

#: ../../../optuna/optuna/trial/_frozen.py:docstring of optuna.trial.FrozenTrial.duration:3
msgid "The duration."
msgstr ""

#: ../../../optuna/optuna/trial/_state.py:docstring of optuna.trial.TrialState:1
msgid "State of a :class:`~optuna.trial.Trial`."
msgstr ""

#: ../../../optuna/optuna/trial/_state.py:docstring of optuna.trial.TrialState:5
msgid "The :class:`~optuna.trial.Trial` is running."
msgstr ""

#: ../../../optuna/optuna/trial/_state.py:docstring of optuna.trial.TrialState:9
msgid "The :class:`~optuna.trial.Trial` has been finished without any error."
msgstr ""

#: ../../../optuna/optuna/trial/_state.py:docstring of optuna.trial.TrialState:13
msgid "The :class:`~optuna.trial.Trial` has been pruned with :class:`~optuna.exceptions.TrialPruned`."
msgstr ""

#: ../../../optuna/optuna/trial/_state.py:docstring of optuna.trial.TrialState:18
msgid "The :class:`~optuna.trial.Trial` has failed due to an uncaught error."
msgstr ""
